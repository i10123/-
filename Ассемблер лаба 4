// БЕЗ ЗНАКА
masm
.model small
.stack 1000h
.386

.data
    X dw ?   
    Y dw ?      
    F dw ?         
    msgX db 'Input X: $'
    msgY db 'Input Y: $'
    msgExample db 'Primer: F = (4596 - 589) / X + (Y * 2385)$'

.code
start:
    mov ax, @data
    mov ds, ax

    mov dx, offset msgExample
    mov ah, 09h
    int 21h
    mov ah, 02h
    mov dl, 0dh
    int 21h
    mov dl, 0ah
    int 21h

    mov dx, offset msgX
    mov ah, 09h
    int 21h

    xor cx, cx
InputX:
    mov ah, 01h
    int 21h
    cmp al, 0dh
    je EndInputX
    sub al, 30h
    cbw
    xchg ax, cx
    mov bx, 10
    mul bx
    add cx, ax
    jmp InputX
EndInputX:
    mov X, cx

    mov dx, offset msgY
    mov ah, 09h
    int 21h

    xor cx, cx
InputY:
    mov ah, 01h
    int 21h
    cmp al, 0dh
    je EndInputY
    sub al, 30h
    cbw
    xchg ax, cx
    mov bx, 10
    mul bx
    add cx, ax
    jmp InputY
EndInputY:
    mov Y, cx

    ; F = (4596 - 589) / X + (Y * 2385)
    mov ax, 4596
    sub ax, 589
    div X
    mov bx, ax
    mov ax, Y
    mov cx, 2385
    mul cx
    add bx, ax
    mov word ptr F, bx

    mov ax, word ptr F
    xor cx, cx
    mov bx, 10

ConvertLoop:
    xor dx, dx
    div bx
    push dx
    inc cx
    test ax, ax
    jnz ConvertLoop

    mov ah, 02h
    mov dl, 0dh
    int 21h
    mov dl, 0ah
    int 21h

PrintLoop:
    pop dx
    add dl, 30h
    mov ah, 02h
    int 21h
    loop PrintLoop

    mov ax, 4C00h
    int 21h

end start

--------------------------------------------------------------------------------------------------------------------------------------------------------

// СО ЗНАКОМ
masm
model small
.386
.stack 400h

.data
    sign db ?
    X dw ?
    Y dw ?
    F dw ?
    msgX db 'Input X: $'
    msgY db 'Input Y: $'
    msgExample db 'Primer: F = (4596 - 589) / X + (Y * 2385)$'
.code

start:
    mov ax, @data
    mov ds, ax
    
    mov dx, offset msgExample
    mov ah, 09h
    int 21h
    mov ah, 02h
    mov dl, 0dh
    int 21h
    mov dl, 0ah
    int 21h
    
    mov dx, offset msgX
    mov ah, 09h
    int 21h
    
    mov sign, 0
    
    mov ah, 01h
    int 21h
    cmp al, '-'
    jne coninput1
    mov sign, 1
    
    mov ah, 01h
    int 21h
    
coninput1:
    sub al, 30h
    mov ah, 0
    mov bx, 10
    mov cx, ax
    
FirstInput:
    mov ah, 01h
    int 21h
    cmp al, 0Dh
    je EndFirst
    sub al, 30h
    cbw
    xchg ax, cx
    mul bx
    add cx, ax
    jmp FirstInput
    
EndFirst:
    cmp sign, 1
    jne final1
    neg cx
    
final1:
    mov X, cx
    
    mov dx, offset msgY
    mov ah, 09h
    int 21h
    
    mov sign, 0
    
    mov ah, 01h
    int 21h
    cmp al, '-'
    jne coninput2
    mov sign, 1
    
    mov ah, 01h
    int 21h
    
coninput2:
    sub al, 30h
    mov ah, 0
    mov bx, 10
    mov cx, ax
    
SecondInput:
    mov ah, 01h
    int 21h
    cmp al, 0Dh
    je EndSecond
    sub al, 30h
    cbw
    xchg ax, cx
    mul bx
    add cx, ax
    jmp SecondInput
    
EndSecond:
    cmp sign, 1
    jne final2
    neg cx
    
final2:
    mov Y, cx
    
    mov ax, 4596
    sub ax, 589
    cwd
    idiv X
    mov bx, ax
    
    mov ax, Y
    imul ax, 2385
    add bx, ax
    mov F, bx

    mov ax, F
    cmp ax, 0
    jnl Positive
    push ax
    mov dl, '-'
    mov ah, 02h
    int 21h
    pop ax
    neg ax
    
Positive:
    xor cx, cx
    mov bx, 10
    
ConvertLoop:
    xor dx, dx
    div bx
    push dx
    inc cx
    test ax, ax
    jnz ConvertLoop
    
PrintLoop:
    pop dx
    add dl, '0'
    mov ah, 02h
    int 21h
    loop PrintLoop
    
    mov ax, 4C00h
    int 21h
end start
